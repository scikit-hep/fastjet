name: wheels

on:
  workflow_dispatch:
  release:
    types:
      - published
  pull_request:
    paths:
      - ".github/workflows/wheels.yml"

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: "Build wheel: ${{ matrix.python }}, ${{ matrix.arch }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [39, 310, 311, 312, 313]
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest, windows-11-arm]
        arch: [auto64]
        exclude:
          - os: windows-11-arm
            python: 39
          - os: windows-11-arm
            python: 310

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install extra deps on macOS
        if: runner.os == 'macOS'
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> "$GITHUB_ENV"
          brew install --ignore-dependencies swig boost cgal
          echo "PATH=/opt/homebrew/opt/make/libexec/gnubin:/opt/homebrew/opt/libtool/libexec/gnubin:$PATH" >> "$GITHUB_ENV"

      - if: matrix.os == 'windows-11-arm'
        name: Install rustup on Windows ARM
        shell: sh
        run: |
          curl -LOs https://static.rust-lang.org/rustup/dist/aarch64-pc-windows-msvc/rustup-init.exe
          ./rustup-init.exe -y --default-toolchain none --no-modify-path
          echo "$USERPROFILE/.cargo/bin" >> "$GITHUB_PATH"
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install extra deps on windows
        if: runner.os == 'windows'
        run: |
          Invoke-Webrequest -Uri https://archives.boost.io/release/1.88.0/source/boost_1_88_0.zip -OutFile boost_1_88_0.zip
          Invoke-Webrequest -Uri https://github.com/CGAL/cgal/releases/download/v6.0.1/CGAL-6.0.1.zip -OutFile CGAL-6.0.1.zip
          Expand-Archive boost_1_88_0.zip .\boost_1_88_0
          Expand-Archive CGAL-6.0.1.zip .\CGAL-6.0.1

      - uses: pypa/cibuildwheel@v3.1
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: cp${{ matrix.python }}-*
          CIBW_CONFIG_SETTINGS: >
            "cmake.define.FASTJET_ENABLE_CGAL"="ON"
          CIBW_CONFIG_SETTINGS_WINDOWS: >
            "cmake.define.Boost_INCLUDE_DIR"="${{ github.workspace }}\boost_1_88_0\boost_1_88_0"
            "cmake.define.CGAL_DIR"="${{ github.workspace }}\CGAL-6.0.1\CGAL-6.0.1"
            "cmake.define.FASTJET_ENABLE_CGAL"="ON"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.python }}-${{ matrix.arch }}
          path: wheelhouse/*.whl

  test_sdist:
    needs: [make_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Install extra deps on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libboost-dev swig libcgal-dev

      - name: test sdist
        run: python -m pip install dist/*.tar.gz

  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    # Restrict to the environment set for the trusted publisher
    environment:
      name: publish
    # Mandatory for publishing with a trusted publisher
    # c.f. https://docs.pypi.org/trusted-publishers/using-a-publisher/
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true

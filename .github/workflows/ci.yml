name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files

  checks:
    name: Check Python ${{ matrix.python-version }}, ${{ matrix.arch }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]
        runs-on: [ubuntu-latest, ubuntu-24.04-arm, macos-latest]
        arch: [auto64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install compiler tools on macOS
        if: runner.os == 'macOS'
        run: |
          brew install make automake swig gmp mpfr boost libtool

      - name: Install extra deps on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libboost-dev libmpfr-dev swig autoconf libtool

      - name: Install package (MacOS)
        if: runner.os == 'macOS'
        run: |
          eval "$(/opt/homebrew/bin/brew shellenv)"
          export PATH="/opt/homebrew/opt/make/libexec/gnubin:/opt/homebrew/opt/libtool/libexec/gnubin:$PATH"
          export CPPFLAGS+="-I/opt/homebrew/include -L/opt/homebrew/lib"
          export CXXFLAGS+="-I/opt/homebrew/include -L/opt/homebrew/lib"
          export CFLAGS+="-I/opt/homebrew/include -L/opt/homebrew/lib"
          export LDFLAGS+="-L/opt/homebrew/lib"
          python -m pip install '.[test]' -v

      - name: Install package (Linux)
        if: runner.os == 'Linux'
        run: |
          echo $PATH
          python -m pip install '.[test]' -v

      - name: List installed Python packages
        run: python -m pip list

      - name: Test package
        run: python -m pytest -vv -rs -Wd

  test_wheels:
    name: "Wheel: ${{ matrix.python }}, ${{ matrix.arch }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13]
        python: [313]
        arch: [auto64]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install compiler tools on macOS
        if: runner.os == 'macOS'
        run: |
          brew install make automake swig mpfr boost libtool
          echo "PATH=/opt/homebrew/opt/make/libexec/gnubin:/opt/homebrew/opt/libtool/libexec/gnubin:$PATH" >> "$GITHUB_ENV"
          echo "CPPFLAGS=-I/opt/homebrew/include -L/opt/homebrew/lib $CPPFLAGS" >> "$GITHUB_ENV"
          echo "CXXFLAGS=-I/opt/homebrew/include -L/opt/homebrew/lib $CXXFLAGS" >> "$GITHUB_ENV"
          echo "CFLAGS=-I/opt/homebrew/include -L/opt/homebrew/lib $CFLAGS" >> "$GITHUB_ENV"
          echo "LDFLAGS=-L/opt/homebrew/lib $LDFLAGS" >> "$GITHUB_ENV"
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> "$GITHUB_ENV"

      - name: Clone gmp
        if: runner.os == 'macOS'
        uses: actions/checkout@v4
        with:
          repository: gmp-mirror/gmp-6.3
          path: gmp-6.3

      - name: Build gmp from source for MACOSX_DEPLOYMENT_TARGET
        if: runner.os == 'macOS'
        working-directory: gmp-6.3
        run: |
          brew install texinfo
          autoreconf -i -f
          ./configure --help
          ./configure \
            --prefix=$(brew --prefix) \
            --enable-cxx
          touch ./doc/version.texi
          make --jobs
          make install

      - uses: pypa/cibuildwheel@v2.23
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: cp${{ matrix.python }}-*
          CIBW_BUILD_VERBOSITY: 2

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.python }}-${{ matrix.arch }}
          path: wheelhouse/*.whl

  pass:
    needs: [pre-commit, checks, test_wheels]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All jobs passed"
